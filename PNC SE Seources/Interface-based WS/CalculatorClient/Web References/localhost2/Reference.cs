// © 2005 IDesign Inc. All rights reserved 
//Questions? Comments? go to 
//http://www.idesign.net

//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3215.11
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3215.11.
// 
namespace CalculatorClient.localhost2 
{
    using System;
    //using System.Web.Services.Protocols;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SimpleCalculatorSoap", Namespace="http://CalculationServices.com")]
    public class SimpleCalculator : System.Web.Services.Protocols.SoapHttpClientProtocol,ICalculator {
        
        /// <remarks/>
        public SimpleCalculator() {
            this.Url = "http://localhost/CalculationServices/SimpleCalculator.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CalculationServices.com/Multiply", RequestNamespace="http://CalculationServices.com", ResponseNamespace="http://CalculationServices.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Multiply(int num1, int num2) {
            object[] results = this.Invoke("Multiply", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMultiply(int num1, int num2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Multiply", new object[] {
                        num1,
                        num2}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndMultiply(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CalculationServices.com/Divide", RequestNamespace="http://CalculationServices.com", ResponseNamespace="http://CalculationServices.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Divide(int num1, int num2) {
            object[] results = this.Invoke("Divide", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDivide(int num1, int num2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Divide", new object[] {
                        num1,
                        num2}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDivide(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CalculationServices.com/Subtract", RequestNamespace="http://CalculationServices.com", ResponseNamespace="http://CalculationServices.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Subtract(int num1, int num2) {
            object[] results = this.Invoke("Subtract", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubtract(int num1, int num2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Subtract", new object[] {
                        num1,
                        num2}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSubtract(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CalculationServices.com/Add", RequestNamespace="http://CalculationServices.com", ResponseNamespace="http://CalculationServices.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Add(int num1, int num2) {
            object[] results = this.Invoke("Add", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAdd(int num1, int num2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Add", new object[] {
                        num1,
                        num2}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    }
}
